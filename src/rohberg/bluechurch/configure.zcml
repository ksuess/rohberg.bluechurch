<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:i18n="http://namespaces.zope.org/i18n"           
    xmlns:monkey="http://namespaces.plone.org/monkey"
    i18n_domain="rohberg.bluechurch">

  <i18n:registerTranslations directory="locales" />

  <includeDependencies package="." />

  <permission
    id="rohberg.bluechurch.addbluechurchprofile"
    title="rohberg.bluechurch.addbluechurchprofile"
    />
    
  <permission
    id="rohberg.bluechurch.addbluechurchcontent"
    title="rohberg.bluechurch.addbluechurchcontent"
    />
    

  <include package=".browser" />
  <include package=".behaviors" />


  <plone:static
      directory="theme"
      type="theme"
      name="bluechurch"
      />

<!--
It’s conventional to use “static” for the directory name and the dotted name of your package for the resource name. You would use this zcml to register it:

<browser:resourceDirectory
  name="example.conference"
  directory="static" />

Then, if a “static” resource directory in the example.conference package contains a file called conference.css, it will be accessible on a URL like http://<server>/site/++resource++example.conference/conference.css. The resource name is the same as the package name wherein the resources directory appears.
       
Also hier dann z.B.
++resource++bluechurch.locationsearch/locationsearch.js
       -->

  <browser:resourceDirectory
      name="bluechurch.locationsearch"
      directory="locationsearch" />
        

  <utility component=".vocabularies.MapLayers" name="rohberg.bluechurch.map_layers"/>
      
  <utility
      name="rohberg.bluechurch.BluchurchTags"
      provides="zope.schema.interfaces.IVocabularyFactory"
      component="rohberg.bluechurch.vocabularies.BluchurchTagsVocabularyFactory"
  />
  <utility
      name="rohberg.bluechurch.Eventformen"
      provides="zope.schema.interfaces.IVocabularyFactory"
      component="rohberg.bluechurch.vocabularies.EventformenVocabularyFactory"
  />
  
  
  <!-- Profile -->
  <!-- <subscriber
    for=".content.bluechurchmembraneprofile.IBluechurchmembraneprofile
         Products.membrane.interfaces.events.IMembraneTypeRegisteredEvent"
    handler=".content.bluechurchmembraneprofile.setInitialProfileRoles"
  /> -->
  <adapter
       factory=".content.bluechurchmembraneprofile.MyDefaultRoles"
       provides="Products.membrane.interfaces.IMembraneUserRoles"
  />

  
  
  <!-- Location -->
  <!-- <subscriber
      for="rohberg.bluechurch.content.bluechurchlocation.IBluechurchlocation
           zope.lifecycleevent.interfaces.IObjectModifiedEvent"
      handler=".eventhandlers.notifyEventAfterLocationChange"
  /> -->
  

  <!-- <adapter factory=".content.bluechurchevent.BluechurchEventAccessor" /> -->
  
  
  <genericsetup:registerProfile
      name="default"
      title="rohberg.bluechurch"
      directory="profiles/default"
      description="Installs the rohberg.bluechurch add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      post_handler=".setuphandlers.post_install"
      />

  <genericsetup:registerProfile
      name="uninstall"
      title="rohberg.bluechurch (uninstall)"
      directory="profiles/uninstall"
      description="Uninstalls the rohberg.bluechurch add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      post_handler=".setuphandlers.uninstall"
      />

    
  <utility
      factory=".setuphandlers.HiddenProfiles"
      name="rohberg.bluechurch-hiddenprofiles" />
      
  

  <include package="collective.monkeypatcher" />

  <monkey:patch
      description="RelationChoice"
      module="plone.dexterity.content"
      original="_default_from_schema"
      replacement=".monkeypatches.patched_default_from_schema"
      /> 
      
      
  <!-- collectionfilter -->
  <adapter factory=".collectionfilter.groupby_modifier" name="modifier_1" />
      
      
</configure>
